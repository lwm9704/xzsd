<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.order.dao.OrderDao">

    <!--订单列表查询-->
    <select id="listOrder" parameterType="com.xzsd.pc.order.entity.OrderInfoF" resultType="com.xzsd.pc.order.entity.OrderInfo">
        select
        order_id orderId,
        total_price totalPrice,
        order_state orderState,
        pay_state payState,
        shop_id shopId,
        user_name userName,
        phone,
        pay_time payTime
        from t_order as a left join t_sys_user
        on a.creat_by  = b.user_id
        where
        is_delete = 0
        <if test="creatId != null and creatId != ''">
            and creat_id like concat('%',#{userId},'%')
        </if>
        <if test="orderId != null and order != ''">
            and order_id like concat('%',#{orderId},'%')
        </if>
        <if test="phone != null and phone != ''">
            and phone like concat('%',#{phone}.'%')
        </if>
        <if test="state != null and state != ''">
            and state = #{state}
        </if>
        <if test="minTime != null and minTime != '' and maxTime != null and maxTime != ''">
            and pay_time between #{minTime} and #{minTime}
        </if>
    </select>

    <!--查询订单详情-->
    <select id="getOrderById" parameterType="java.lang.String" resultType="com.xzsd.pc.order.entity.OrderInfoD">
        select
            user_id userId,
            order_id orderId,
            goods_id goodsId,
            goods_name goodsName,
            pay_num payNum,
            total_price totalPrice,
            sales_price salesPrice,
            set_price setPrice
        from t_shoppingCar as a inner join t_goods as b
        on a.goods_id = b.goods_id
        left join t_order
        where order_id = #{orderId}
        and is_delete = 0
    </select>

    <!--修改订单状态-->
    <update id="updateOrderState" parameterType="com.xzsd.pc.order.entity.OrderInfoV">
        update t_order
        set
        state = #{state},
        last_modify_by = #{lastModifyBy},
        modify_time = now(),
        verion = version + 1
        where order_id = #{orderId}
    </update>
</mapper>